// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	entity "final-project-backend/entity"

	mock "github.com/stretchr/testify/mock"
)

// ShippingRepository is an autogenerated mock type for the ShippingRepository type
type ShippingRepository struct {
	mock.Mock
}

// CreateShipping provides a mock function with given fields: shipping
func (_m *ShippingRepository) CreateShipping(shipping entity.Shipping) (*entity.Shipping, error) {
	ret := _m.Called(shipping)

	var r0 *entity.Shipping
	if rf, ok := ret.Get(0).(func(entity.Shipping) *entity.Shipping); ok {
		r0 = rf(shipping)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Shipping)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entity.Shipping) error); ok {
		r1 = rf(shipping)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewShippingRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewShippingRepository creates a new instance of ShippingRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewShippingRepository(t mockConstructorTestingTNewShippingRepository) *ShippingRepository {
	mock := &ShippingRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
