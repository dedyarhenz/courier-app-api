// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	dto "final-project-backend/dto"

	mock "github.com/stretchr/testify/mock"
)

// ShippingUsecase is an autogenerated mock type for the ShippingUsecase type
type ShippingUsecase struct {
	mock.Mock
}

// CreateShipping provides a mock function with given fields: request
func (_m *ShippingUsecase) CreateShipping(request dto.ShippingCreateRequest) (*dto.ShippingResponse, error) {
	ret := _m.Called(request)

	var r0 *dto.ShippingResponse
	if rf, ok := ret.Get(0).(func(dto.ShippingCreateRequest) *dto.ShippingResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.ShippingResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(dto.ShippingCreateRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewShippingUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewShippingUsecase creates a new instance of ShippingUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewShippingUsecase(t mockConstructorTestingTNewShippingUsecase) *ShippingUsecase {
	mock := &ShippingUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
